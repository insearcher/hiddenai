name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for changelog generation
      
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Generate Changelog
        id: changelog
        run: |
          # Get the latest tag, if any
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          # If no previous tag exists, use the first commit
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          # Generate changelog from commits since the latest tag
          CHANGELOG=$(git log --pretty=format:"- %s" $LATEST_TAG..HEAD)
          
          # If no commits since last tag, add a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- Maintenance release"
          fi
          
          # Save changelog to a file
          echo "$CHANGELOG" > changelog.md
      
      - name: Build app
        run: |
          xcodebuild -project HiddenAIClient.xcodeproj -scheme HiddenAIClient -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -derivedDataPath build
      
      - name: Create DMG
        run: |
          # Find the app in the build directory
          APP_PATH=$(find build/Build/Products/Release -name "*.app" -type d)
          if [ -z "$APP_PATH" ]; then
            echo "Error: Could not find .app file in build directory"
            find build -type d -name "*.app" # Debug: List all .app files
            exit 1
          fi
          
          echo "Found app at: $APP_PATH"
          DMG_NAME="HiddenAI-${{ github.event.inputs.version }}.dmg"
          
          # Create a directory for distribution
          mkdir -p dist
          
          # Create simple DMG using hdiutil (built into macOS)
          hdiutil create -volname "HiddenAI" -srcfolder "$APP_PATH" -ov -format UDZO "dist/$DMG_NAME"
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: HiddenAI ${{ github.event.inputs.version }}
          body_path: changelog.md
          draft: false
          prerelease: false
          files: |
            dist/HiddenAI-${{ github.event.inputs.version }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
